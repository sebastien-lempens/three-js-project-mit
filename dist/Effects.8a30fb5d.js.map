{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-8bac862bba9a74de.js","scripts/class/Effects.js","node_modules/three/examples/jsm/postprocessing/ShaderPass.js","node_modules/three/examples/jsm/postprocessing/Pass.js","node_modules/three/examples/jsm/postprocessing/BokehPass.js","node_modules/three/examples/jsm/shaders/BokehShader.js","node_modules/three/examples/jsm/shaders/ColorCorrectionShader.js","node_modules/three/examples/jsm/postprocessing/UnrealBloomPass.js","node_modules/three/examples/jsm/shaders/CopyShader.js","node_modules/three/examples/jsm/shaders/LuminosityHighPassShader.js","scripts/shaders/fog/vertex.glsl","scripts/shaders/fog/fragment.glsl","scripts/shaders/flame/vertex.glsl","scripts/shaders/flame/fragment.glsl","scripts/shaders/dust/vertex.glsl","scripts/shaders/dust/fragment.glsl","scripts/shaders/stars/vertex.glsl","scripts/shaders/stars/fragment.glsl","scripts/shaders/scene/vertex.glsl","scripts/shaders/scene/fragment.glsl","scripts/shaders/meshes/seaOnBeforeCompile.js","scripts/shaders/packages/glsl-noise/simplex-3d.glsl","scripts/shaders/meshes/starsOnBeforeCompile.js","scripts/shaders/meshes/shoresOnBeforeCompile.js","scripts/shaders/meshes/treesOnBeforeCompile.js","scripts/shaders/meshes/mountainsOnBeforeCompile.js","scripts/shaders/meshes/vegetationOnBeforeCompile.js","scripts/shaders/meshes/rocksOnBeforeCompile.js","scripts/shaders/meshes/palmtreesOnBeforeCompile.js","scripts/shaders/meshes/moonOnBeforeCompile.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"69f74e7f31319ffd\";module.bundle.HMR_BUNDLE_ID = \"703387218a30fb5d\";\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      removeErrorOverlay();\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        } // Render the fancy html overlay\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n      document.body.appendChild(overlay);\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\\n          \").concat(stack, \"\\n        </pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n    return;\n  }\n\n  var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n  if (deps) {\n    var fn = new Function('require', 'module', 'exports', asset.output);\n    modules[asset.id] = [fn, deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(module.bundle.root, id).some(function (v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import * as THREE from 'three'\r\nimport { gsap } from 'gsap'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\r\nimport { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass'\r\nimport { ColorCorrectionShader } from 'three/examples/jsm/shaders/ColorCorrectionShader'\r\n//import { SobelOperatorShader } from 'three/examples/jsm/shaders/SobelOperatorShader'\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\r\nimport FogVertex from '../shaders/fog/vertex.glsl'\r\nimport FogFragment from '../shaders/fog/fragment.glsl'\r\nimport FlameVertex from '../shaders/flame/vertex.glsl'\r\nimport FlameFragment from '../shaders/flame/fragment.glsl'\r\nimport DustVertex from '../shaders/dust/vertex.glsl'\r\nimport DustFragment from '../shaders/dust/fragment.glsl'\r\nimport StarsVertex from '../shaders/stars/vertex.glsl'\r\nimport StarsFragment from '../shaders/stars/fragment.glsl'\r\nimport SceneVertex from '../shaders/scene/vertex.glsl'\r\nimport SceneFragment from '../shaders/scene/fragment.glsl'\r\nimport SeaMaterialOnBeforeCompile from '../shaders/meshes/seaOnBeforeCompile.js'\r\nimport StarsMaterialOnBeforeCompile from '../shaders/meshes/starsOnBeforeCompile.js'\r\nimport ShoresMaterialOnBeforeCompile from '../shaders/meshes/shoresOnBeforeCompile.js'\r\nimport TreesMaterialOnBeforeCompile from '../shaders/meshes/treesOnBeforeCompile.js'\r\nimport MountainsMaterialOnBeforeCompile from '../shaders/meshes/mountainsOnBeforeCompile.js'\r\nimport VegetationMaterialOnBeforeCompile from '../shaders/meshes/vegetationOnBeforeCompile.js'\r\nimport RocksMaterialOnBeforeCompile from '../shaders/meshes/rocksOnBeforeCompile.js'\r\nimport PalmtreesMaterialOnBeforeCompile from '../shaders/meshes/palmtreesOnBeforeCompile.js'\r\nimport MoonMaterialOnBeforeCompile from '../shaders/meshes/moonOnBeforeCompile.js'\r\n\r\nexport default class Effects {\r\n  constructor() {\r\n    this.app = window.app\r\n    this.scene = this.app.webgl.scene\r\n    this.camera = this.app.webgl.camera\r\n    this.meshes = this.app.webgl.world.meshes\r\n    this.effectComposer = {}\r\n    this.fog = {\r\n      geometry: null,\r\n      material: null,\r\n      mesh: null,\r\n    }\r\n    this.flame = {\r\n      geometry: null,\r\n      material: null,\r\n      mesh: null,\r\n    }\r\n    this.flame2 = {\r\n      geometry: null,\r\n      material: null,\r\n      mesh: null,\r\n    }\r\n    this.stars = {\r\n      geometry: null,\r\n      material: null,\r\n      mesh: null,\r\n    }\r\n    this.dust = {\r\n      geometry: null,\r\n      material: null,\r\n      mesh: null,\r\n      colors: [\r\n        [0, 1, 1],\r\n        [1, 1, 1],\r\n      ],\r\n      particles: 400,\r\n    }\r\n    this.mesh = {}\r\n    this.addFog()\r\n    this.addFlames()\r\n    this.addStars()\r\n    this.addDust()\r\n    this.setShaderMeshTrees()\r\n    this.setShaderMeshShores()\r\n    this.setShaderMeshSea()\r\n    this.setShaderMeshMountains()\r\n    this.setShaderMeshVegetation()\r\n    this.setShaderMeshRocks()\r\n    this.setShaderMeshPalmtrees()\r\n    this.setShaderMeshMoon()\r\n    this.setShaderScene()\r\n\r\n  }\r\n  addFog() {\r\n    this.fog.geometry = new THREE.BoxBufferGeometry(0.6, 0.005, 0.5, 1, 1, 1)\r\n    this.fog.material = new THREE.ShaderMaterial({\r\n      clipping: true,\r\n      clippingPlanes: this.app.webgl.clippingPlanes,\r\n      uniforms: {\r\n        uTime: { value: this.app.timer },\r\n        uColor: { value: this.scene.background },\r\n      },\r\n      transparent: true,\r\n      vertexShader: FogVertex,\r\n      fragmentShader: FogFragment,\r\n    })\r\n    this.fog.mesh = new THREE.Mesh(this.fog.geometry, this.fog.material)\r\n    this.fog.mesh.position.z = 0.0\r\n    this.fog.mesh.position.y = 0.0065\r\n    this.fog.mesh.name = 'Fog'\r\n    this.scene.add(this.fog.mesh)\r\n  }\r\n  addFlames() {\r\n    this.flame.geometry = new THREE.PlaneBufferGeometry(0.03, 0.03)\r\n    this.flame.material = new THREE.ShaderMaterial({\r\n      transparent: true,\r\n      clipping: true,\r\n      clippingPlanes: this.app.webgl.clippingPlanes,\r\n      uniforms: {\r\n        uTime: { value: this.app.timer },\r\n      },\r\n      vertexShader: FlameVertex,\r\n      fragmentShader: FlameFragment,\r\n    })\r\n    this.flame.mesh = new THREE.Mesh(this.flame.geometry, this.flame.material)\r\n    this.flame.mesh.position.set(-0.0646, 0.031, -0.027)\r\n    this.flame.mesh.name = 'Flame'\r\n    this.flame2.mesh = this.flame.mesh.clone()\r\n    this.flame2.mesh.name = 'Flame 2'\r\n    this.flame2.mesh.position.set(-0.055, 0.031, -0.083)\r\n    this.scene.add(this.flame.mesh)\r\n    setTimeout(() => this.scene.add(this.flame2.mesh), 500)\r\n  }\r\n  addStars() {\r\n    const vertices = []\r\n    const opacities = []\r\n    for (let i = 0; i < 5000; i++) {\r\n      const x = THREE.MathUtils.randFloatSpread(10)\r\n      const y = THREE.MathUtils.randFloat(0, 5)\r\n      const z = THREE.MathUtils.randFloatSpread(10)\r\n      vertices.push(x, y, z)\r\n      opacities.push(Math.random() * 0.4 + 0.05)\r\n    }\r\n    this.stars.geometry = new THREE.BufferGeometry()\r\n    this.stars.geometry.setAttribute(\r\n      'position',\r\n      new THREE.Float32BufferAttribute(vertices, 3)\r\n    )\r\n    this.stars.geometry.setAttribute(\r\n      'opacity',\r\n      new THREE.Float32BufferAttribute(opacities, 1)\r\n    )\r\n    this.stars.material = new THREE.ShaderMaterial({\r\n      transparent: true,\r\n      uniforms: {\r\n        uSize: { value: 0.9 },\r\n      },\r\n      vertexShader: StarsVertex,\r\n      fragmentShader: StarsFragment,\r\n    })\r\n    this.stars.mesh = new THREE.Points(this.stars.geometry, this.stars.material)\r\n    this.scene.add(this.stars.mesh)\r\n  }\r\n  addDust() {\r\n    // Vertices Position\r\n    const positions = []\r\n    const colors = []\r\n    const opacities = []\r\n    for (let i = 0; i < this.dust.particles; i++) {\r\n      const xyz = [\r\n        THREE.MathUtils.randFloatSpread(0.25),\r\n        Math.random() * 0.05 + 0.005,\r\n        THREE.MathUtils.randFloatSpread(0.25),\r\n      ]\r\n      const randomColor =\r\n        this.dust.colors[\r\n          Math.round(Math.random() * (this.dust.colors.length - 1))\r\n        ]\r\n      const rgb = randomColor\r\n\r\n      const opacity = Math.random() + 0.2\r\n\r\n      positions.push(...xyz)\r\n      colors.push(...rgb)\r\n      opacities.push(opacity)\r\n    }\r\n\r\n    this.dust.geometry = new THREE.BufferGeometry()\r\n    this.dust.geometry.setAttribute(\r\n      'position',\r\n      new THREE.Float32BufferAttribute(positions, 3)\r\n    )\r\n    this.dust.geometry.setAttribute(\r\n      'color',\r\n      new THREE.Float32BufferAttribute(colors, 3)\r\n    )\r\n    this.dust.geometry.setAttribute(\r\n      'opacity',\r\n      new THREE.Float32BufferAttribute(opacities, 1)\r\n    )\r\n\r\n    this.dust.material = new THREE.ShaderMaterial({\r\n      clipping: true,\r\n      clippingPlanes: this.app.webgl.clippingPlanes,\r\n      uniforms: {\r\n        uTime: { value: this.app.timer },\r\n        uSize: { value: 0.9 },\r\n      },\r\n      depthWrite: false,\r\n      blending: THREE.AdditiveBlending,\r\n      vertexColors: true,\r\n      vertexShader: DustVertex,\r\n      fragmentShader: DustFragment,\r\n    })\r\n    this.dust.mesh = new THREE.Points(this.dust.geometry, this.dust.material)\r\n    this.scene.add(this.dust.mesh)\r\n  }\r\n  setShaderMeshSea() {\r\n    const [mesh] = this.meshes.filter((mesh) => mesh.name === 'Sea')\r\n    this.mesh.sea = mesh\r\n    SeaMaterialOnBeforeCompile(this.mesh.sea)\r\n  }\r\n  setShaderMeshShores() {\r\n    const [mesh] = this.meshes.filter((mesh) => mesh.name === 'Shores')\r\n    this.mesh.shores = mesh\r\n    ShoresMaterialOnBeforeCompile(this.mesh.shores)\r\n  }\r\n  setShaderMeshTrees() {\r\n    const [mesh] = this.meshes.filter((mesh) => mesh.name === 'Trees')\r\n    this.mesh.trees = mesh\r\n    TreesMaterialOnBeforeCompile(this.mesh.trees)\r\n  }\r\n  setShaderMeshMountains() {\r\n    const [mesh] = this.meshes.filter((mesh) => mesh.name === 'Mountains')\r\n    this.mesh.mountains = mesh\r\n    MountainsMaterialOnBeforeCompile(this.mesh.mountains)\r\n  }\r\n  setShaderMeshVegetation() {\r\n    const [mesh] = this.meshes.filter((mesh) => mesh.name === 'Vegetation')\r\n    this.mesh.vegetation = mesh\r\n    VegetationMaterialOnBeforeCompile(this.mesh.vegetation)\r\n  }\r\n  setShaderMeshRocks() {\r\n    const [mesh] = this.meshes.filter((mesh) => mesh.name === 'Rocks')\r\n    this.mesh.rocks = mesh\r\n    RocksMaterialOnBeforeCompile(this.mesh.rocks)\r\n  }\r\n  setShaderMeshPalmtrees() {\r\n    const [mesh] = this.meshes.filter((mesh) => mesh.name === 'Palmtrees')\r\n    this.mesh.palmtrees = mesh\r\n    PalmtreesMaterialOnBeforeCompile(this.mesh.palmtrees)\r\n  }\r\n  setShaderMeshMoon() {\r\n    const [mesh] = this.meshes.filter((mesh) => mesh.name === 'Moon')\r\n    this.mesh.moon = mesh\r\n    this.mesh.moon.scale.addScalar(0.35)\r\n    MoonMaterialOnBeforeCompile(this.mesh.moon)\r\n  }\r\n  async setShaderScene() {\r\n    /**\r\n     * BloomPass Shader\r\n     */\r\n    const bloomPass = new UnrealBloomPass()\r\n    ;(bloomPass.strength = this.app.params.scene.effect.bloom.strength),\r\n      (bloomPass.radius = this.app.params.scene.effect.bloom.radius),\r\n      (bloomPass.threshold = this.app.params.scene.effect.bloom.threshold),\r\n      (this.effectComposer.bloomPass = bloomPass)\r\n    /**\r\n     * BokehPass Shader\r\n     */\r\n    const bokehPass = new BokehPass(this.scene, this.camera, {\r\n      focus: this.app.params.scene.effect.bokeh.focus,\r\n      aperture: this.app.params.scene.effect.bokeh.aperture,\r\n      maxblur: 0.01,\r\n    })\r\n    this.effectComposer.bokehPass = bokehPass\r\n\r\n    /**\r\n     * Custom Shaders\r\n     * 1. Color Correction\r\n     * 2. Custom Shader\r\n     */\r\n    const colorCorrectionShader = new ShaderPass(ColorCorrectionShader)\r\n    colorCorrectionShader.uniforms.addRGB.value = new THREE.Vector3(\r\n      0,\r\n      0.01,\r\n      0.04\r\n    )\r\n    colorCorrectionShader.uniforms.powRGB.value = new THREE.Vector3(1, 1, 0.95)\r\n\r\n    /*const edgeShader = new ShaderPass(SobelOperatorShader)\r\n\r\n\t\tedgeShader.uniforms.resolution.value = new THREE.Vector2(\r\n\t\t\twindow.innerWidth,\r\n\t\t\twindow.innerHeight\r\n\t\t)\r\n\t\tthis.effectComposer.edgeShader = edgeShader */\r\n\r\n    const sceneReveal = {\r\n      uniforms: {\r\n        tDiffuse: { value: null },\r\n        opacity: { value: 1.0 },\r\n        uColor: { value: this.scene.background },\r\n        uProgress: { value: 0.0001 },\r\n      },\r\n      vertexShader: SceneVertex,\r\n      fragmentShader: SceneFragment,\r\n    }\r\n    const sceneRevealPass = new ShaderPass(sceneReveal)\r\n    sceneRevealPass.material.transparent = true\r\n    const { mainTitleEl } = this.app.webgl\r\n    gsap.to(sceneRevealPass.material.uniforms.uProgress, {\r\n      onStart() {\r\n        mainTitleEl.removeAttribute('style')\r\n        gsap.to(mainTitleEl, {\r\n          ease: 'power1.inOut',\r\n          delay: 0.5,\r\n          duration: 2,\r\n          opacity: 0,\r\n          force3D: true,\r\n          scale: 1.2,\r\n          onComplete() {\r\n            const h1 = document.querySelector('h1')\r\n            h1.classList.add('top-left-position')\r\n            gsap.set(mainTitleEl, {\r\n              scale: 1,\r\n            })\r\n            gsap.fromTo(\r\n              mainTitleEl,\r\n              {\r\n                opacity: 0,\r\n                scale: 0.9,\r\n              },\r\n              {\r\n                opacity: 1,\r\n                scale: 1,\r\n                duration: 2,\r\n                force3D: true,\r\n                ease: 'power1.inOut',\r\n              }\r\n            )\r\n          },\r\n        })\r\n      },\r\n      delay: 1,\r\n      value: 1.2,\r\n      duration: 4,\r\n      ease: 'none',\r\n    })\r\n\r\n    /**\r\n     * Add shader to composer\r\n     */\r\n    //this.app.webgl.composer.removePass(edgeShader)\r\n    //this.app.webgl.composer.addPass(edgeShader)\r\n    this.app.webgl.composer.addPass(sceneRevealPass)\r\n    this.app.webgl.composer.addPass(colorCorrectionShader)\r\n    this.app.webgl.composer.addPass(bloomPass)\r\n    this.app.webgl.composer.addPass(bokehPass)\r\n\r\n    this.app.effectComposer = this.effectComposer\r\n  }\r\n\r\n  update() { \r\n    if (this.fog.material) {\r\n      this.fog.material.uniforms.uTime.value = this.app.timer\r\n      this.fog.material.uniforms.uColor.value = this.scene.background\r\n    }\r\n    if (this.flame.material) {\r\n      this.flame.material.uniforms.uTime.value = this.app.timer\r\n      this.flame.mesh.rotation.y = this.flame2.mesh.rotation.y =\r\n        this.app.webgl.camera.rotation.y\r\n    }\r\n    if (this.dust.mesh) {\r\n      this.dust.material.uniforms.uTime.value = this.app.timer\r\n    }\r\n    if (this.mesh.sea) {\r\n      if (\r\n        !this.mesh.sea.material.userData.materialShader.uniforms.uDepth.value\r\n      ) {\r\n        this.mesh.sea.material.userData.materialShader.uniforms.uDepth.value =\r\n          new THREE.TextureLoader().load('assets/textures/GrayscaleSea.jpg')\r\n      }\r\n      this.mesh.sea.material.userData.materialShader.uniforms.uColor.value =\r\n        this.scene.background\r\n      this.mesh.sea.material.userData.materialShader.uniforms.uTime.value =\r\n        this.app.timer\r\n    }\r\n    if (this.mesh.shores) {\r\n      if (\r\n        !this.mesh.shores.material.userData.materialShader.uniforms.uDepth.value\r\n      ) {\r\n        this.mesh.shores.material.userData.materialShader.uniforms.uDepth.value =\r\n          new THREE.TextureLoader().load('assets/textures/GrayscaleShores.jpg')\r\n      }\r\n      this.mesh.shores.material.userData.materialShader.uniforms.uColor.value =\r\n        this.scene.background\r\n    }\r\n    if (this.mesh.trees) {\r\n      if (\r\n        !this.mesh.trees.material.userData.materialShader.uniforms.uDepth.value\r\n      ) {\r\n        this.mesh.trees.material.userData.materialShader.uniforms.uDepth.value =\r\n          new THREE.TextureLoader().load('assets/textures/GrayscaleTrees.jpg')\r\n      }\r\n      this.mesh.trees.material.userData.materialShader.uniforms.uColor.value =\r\n        this.scene.background\r\n    }\r\n    if (this.mesh.mountains) {\r\n      if (\r\n        !this.mesh.mountains.material.userData.materialShader.uniforms.uDepth\r\n          .value\r\n      ) {\r\n        this.mesh.mountains.material.userData.materialShader.uniforms.uDepth.value =\r\n          new THREE.TextureLoader().load(\r\n            'assets/textures/GrayscaleMountains.jpg'\r\n          )\r\n      }\r\n      this.mesh.mountains.material.userData.materialShader.uniforms.uColor.value =\r\n        this.scene.background\r\n    }\r\n    if (this.mesh.vegetation) {\r\n      if (\r\n        !this.mesh.vegetation.material.userData.materialShader.uniforms.uDepth\r\n          .value\r\n      ) {\r\n        this.mesh.vegetation.material.userData.materialShader.uniforms.uDepth.value =\r\n          new THREE.TextureLoader().load(\r\n            'assets/textures/GrayscaleVegetation.jpg'\r\n          )\r\n      }\r\n      this.mesh.vegetation.material.userData.materialShader.uniforms.uColor.value =\r\n        this.scene.background\r\n    }\r\n    if (this.mesh.rocks) {\r\n      if (\r\n        !this.mesh.rocks.material.userData.materialShader.uniforms.uDepth.value\r\n      ) {\r\n        this.mesh.rocks.material.userData.materialShader.uniforms.uDepth.value =\r\n          new THREE.TextureLoader().load('assets/textures/GrayscaleRocks.jpg')\r\n      }\r\n      this.mesh.rocks.material.userData.materialShader.uniforms.uColor.value =\r\n        this.scene.background\r\n    }\r\n    if (this.mesh.palmtrees) {\r\n      if (\r\n        !this.mesh.palmtrees.material.userData.materialShader.uniforms.uDepth\r\n          .value\r\n      ) {\r\n        this.mesh.palmtrees.material.userData.materialShader.uniforms.uDepth.value =\r\n          new THREE.TextureLoader().load(\r\n            'assets/textures/GrayscalePalmtrees.jpg'\r\n          )\r\n      }\r\n      if (\r\n        !this.mesh.palmtrees.material.userData.materialShader.uniforms.uDepth2\r\n          .value\r\n      ) {\r\n        this.mesh.palmtrees.material.userData.materialShader.uniforms.uDepth2.value =\r\n          new THREE.TextureLoader().load(\r\n            'assets/textures/Grayscale2Palmtrees.jpg'\r\n          )\r\n      }\r\n      this.mesh.palmtrees.material.userData.materialShader.uniforms.uColor.value =\r\n        this.scene.background\r\n\r\n      this.mesh.palmtrees.material.userData.materialShader.uniforms.uTime.value =\r\n        this.app.timer\r\n    }\r\n    if (this.mesh.moon) {\r\n      this.mesh.moon.material.userData.materialShader.uniforms.uHaloColor.value =\r\n        this.scene.background\r\n    }\r\n  }\r\n}\r\n","import {\n\tShaderMaterial,\n\tUniformsUtils\n} from '../../../build/three.module.js';\nimport { Pass } from '../postprocessing/Pass.js';\n\nvar ShaderPass = function ( shader, textureID ) {\n\n\tPass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\n\n\tif ( shader instanceof ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\n\n};\n\nShaderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n\nexport { ShaderPass };\n","import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tOrthographicCamera,\n\tMesh\n} from '../../../build/three.module.js';\n\nfunction Pass() {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n}\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\n\n// Important: It's actually a hack to put FullScreenQuad into the Pass namespace. This is only\n// done to make examples/js code work. Normally, FullScreenQuad should be exported\n// from this module like Pass.\n\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t// https://github.com/mrdoob/three.js/pull/21358\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { Pass };\n","import {\n\tColor,\n\tMeshDepthMaterial,\n\tNearestFilter,\n\tNoBlending,\n\tRGBADepthPacking,\n\tShaderMaterial,\n\tUniformsUtils,\n\tWebGLRenderTarget\n} from '../../../build/three.module.js';\nimport { Pass } from '../postprocessing/Pass.js';\nimport { BokehShader } from '../shaders/BokehShader.js';\n\n/**\n * Depth-of-field post-process with bokeh shader\n */\n\nvar BokehPass = function ( scene, camera, params ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tvar focus = ( params.focus !== undefined ) ? params.focus : 1.0;\n\tvar aspect = ( params.aspect !== undefined ) ? params.aspect : camera.aspect;\n\tvar aperture = ( params.aperture !== undefined ) ? params.aperture : 0.025;\n\tvar maxblur = ( params.maxblur !== undefined ) ? params.maxblur : 1.0;\n\n\t// render targets\n\n\tvar width = params.width || window.innerWidth || 1;\n\tvar height = params.height || window.innerHeight || 1;\n\n\tthis.renderTargetDepth = new WebGLRenderTarget( width, height, {\n\t\tminFilter: NearestFilter,\n\t\tmagFilter: NearestFilter\n\t} );\n\n\tthis.renderTargetDepth.texture.name = 'BokehPass.depth';\n\n\t// depth material\n\n\tthis.materialDepth = new MeshDepthMaterial();\n\tthis.materialDepth.depthPacking = RGBADepthPacking;\n\tthis.materialDepth.blending = NoBlending;\n\n\t// bokeh material\n\n\tif ( BokehShader === undefined ) {\n\n\t\tconsole.error( 'THREE.BokehPass relies on BokehShader' );\n\n\t}\n\n\tvar bokehShader = BokehShader;\n\tvar bokehUniforms = UniformsUtils.clone( bokehShader.uniforms );\n\n\tbokehUniforms[ 'tDepth' ].value = this.renderTargetDepth.texture;\n\n\tbokehUniforms[ 'focus' ].value = focus;\n\tbokehUniforms[ 'aspect' ].value = aspect;\n\tbokehUniforms[ 'aperture' ].value = aperture;\n\tbokehUniforms[ 'maxblur' ].value = maxblur;\n\tbokehUniforms[ 'nearClip' ].value = camera.near;\n\tbokehUniforms[ 'farClip' ].value = camera.far;\n\n\tthis.materialBokeh = new ShaderMaterial( {\n\t\tdefines: Object.assign( {}, bokehShader.defines ),\n\t\tuniforms: bokehUniforms,\n\t\tvertexShader: bokehShader.vertexShader,\n\t\tfragmentShader: bokehShader.fragmentShader\n\t} );\n\n\tthis.uniforms = bokehUniforms;\n\tthis.needsSwap = false;\n\n\tthis.fsQuad = new Pass.FullScreenQuad( this.materialBokeh );\n\n\tthis._oldClearColor = new Color();\n\n};\n\nBokehPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: BokehPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive*/ ) {\n\n\t\t// Render depth into texture\n\n\t\tthis.scene.overrideMaterial = this.materialDepth;\n\n\t\trenderer.getClearColor( this._oldClearColor );\n\t\tvar oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( 0xffffff );\n\t\trenderer.setClearAlpha( 1.0 );\n\t\trenderer.setRenderTarget( this.renderTargetDepth );\n\t\trenderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// Render bokeh composite\n\n\t\tthis.uniforms[ 'tColor' ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'nearClip' ].value = this.camera.near;\n\t\tthis.uniforms[ 'farClip' ].value = this.camera.far;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.setClearColor( this._oldClearColor );\n\t\trenderer.setClearAlpha( oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { BokehPass };\n","/**\n * Depth-of-field shader with bokeh\n * ported from GLSL shader by Martins Upitis\n * http://artmartinsh.blogspot.com/2010/02/glsl-lens-blur-filter-with-bokeh.html\n */\n\nvar BokehShader = {\n\n\tdefines: {\n\t\t'DEPTH_PACKING': 1,\n\t\t'PERSPECTIVE_CAMERA': 1,\n\t},\n\n\tuniforms: {\n\n\t\t'tColor': { value: null },\n\t\t'tDepth': { value: null },\n\t\t'focus': { value: 1.0 },\n\t\t'aspect': { value: 1.0 },\n\t\t'aperture': { value: 0.025 },\n\t\t'maxblur': { value: 0.01 },\n\t\t'nearClip': { value: 1.0 },\n\t\t'farClip': { value: 1000.0 },\n\n\t},\n\n\tvertexShader: [\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tvUv = uv;',\n\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t'}'\n\n\t].join( '\\n' ),\n\n\tfragmentShader: [\n\t\t'#include <common>',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'uniform sampler2D tColor;',\n\t\t'uniform sampler2D tDepth;',\n\n\t\t'uniform float maxblur;', // max blur amount\n\t\t'uniform float aperture;', // aperture - bigger values for shallower depth of field\n\n\t\t'uniform float nearClip;',\n\t\t'uniform float farClip;',\n\n\t\t'uniform float focus;',\n\t\t'uniform float aspect;',\n\n\t\t'#include <packing>',\n\n\t\t'float getDepth( const in vec2 screenPosition ) {',\n\t\t'\t#if DEPTH_PACKING == 1',\n\t\t'\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );',\n\t\t'\t#else',\n\t\t'\treturn texture2D( tDepth, screenPosition ).x;',\n\t\t'\t#endif',\n\t\t'}',\n\n\t\t'float getViewZ( const in float depth ) {',\n\t\t'\t#if PERSPECTIVE_CAMERA == 1',\n\t\t'\treturn perspectiveDepthToViewZ( depth, nearClip, farClip );',\n\t\t'\t#else',\n\t\t'\treturn orthographicDepthToViewZ( depth, nearClip, farClip );',\n\t\t'\t#endif',\n\t\t'}',\n\n\n\t\t'void main() {',\n\n\t\t'\tvec2 aspectcorrect = vec2( 1.0, aspect );',\n\n\t\t'\tfloat viewZ = getViewZ( getDepth( vUv ) );',\n\n\t\t'\tfloat factor = ( focus + viewZ );', // viewZ is <= 0, so this is a difference equation\n\n\t\t'\tvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );',\n\n\t\t'\tvec2 dofblur9 = dofblur * 0.9;',\n\t\t'\tvec2 dofblur7 = dofblur * 0.7;',\n\t\t'\tvec2 dofblur4 = dofblur * 0.4;',\n\n\t\t'\tvec4 col = vec4( 0.0 );',\n\n\t\t'\tcol += texture2D( tColor, vUv.xy );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );',\n\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );',\n\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );',\n\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );',\n\t\t'\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );',\n\n\t\t'\tgl_FragColor = col / 41.0;',\n\t\t'\tgl_FragColor.a = 1.0;',\n\n\t\t'}'\n\n\t].join( '\\n' )\n\n};\n\nexport { BokehShader };\n","import {\n\tVector3\n} from '../../../build/three.module.js';\n\n/**\n * Color correction\n */\n\nvar ColorCorrectionShader = {\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'powRGB': { value: new Vector3( 2, 2, 2 ) },\n\t\t'mulRGB': { value: new Vector3( 1, 1, 1 ) },\n\t\t'addRGB': { value: new Vector3( 0, 0, 0 ) }\n\n\t},\n\n\tvertexShader: [\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tvUv = uv;',\n\n\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t'}'\n\n\t].join( '\\n' ),\n\n\tfragmentShader: [\n\n\t\t'uniform sampler2D tDiffuse;',\n\t\t'uniform vec3 powRGB;',\n\t\t'uniform vec3 mulRGB;',\n\t\t'uniform vec3 addRGB;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tgl_FragColor = texture2D( tDiffuse, vUv );',\n\t\t'\tgl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );',\n\n\t\t'}'\n\n\t].join( '\\n' )\n\n};\n\nexport { ColorCorrectionShader };\n","import {\n\tAdditiveBlending,\n\tColor,\n\tLinearFilter,\n\tMeshBasicMaterial,\n\tRGBAFormat,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from '../../../build/three.module.js';\nimport { Pass } from '../postprocessing/Pass.js';\nimport { CopyShader } from '../shaders/CopyShader.js';\nimport { LuminosityHighPassShader } from '../shaders/LuminosityHighPassShader.js';\n\n/**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nvar UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\n\n\tPass.call( this );\n\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new Color( 0, 0, 0 );\n\n\t// render targets\n\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tthis.renderTargetBright = new WebGLRenderTarget( resx, resy, pars );\n\tthis.renderTargetBright.texture.name = 'UnrealBloomPass.bright';\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tvar renderTargetHorizonal = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetHorizonal.texture.name = 'UnrealBloomPass.h' + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\tvar renderTargetVertical = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetVertical.texture.name = 'UnrealBloomPass.v' + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// luminosity high pass material\n\n\tif ( LuminosityHighPassShader === undefined )\n\t\tconsole.error( 'THREE.UnrealBloomPass relies on LuminosityHighPassShader' );\n\n\tvar highPassShader = LuminosityHighPassShader;\n\tthis.highPassUniforms = UniformsUtils.clone( highPassShader.uniforms );\n\n\tthis.highPassUniforms[ 'luminosityThreshold' ].value = threshold;\n\tthis.highPassUniforms[ 'smoothWidth' ].value = 0.01;\n\n\tthis.materialHighPassFilter = new ShaderMaterial( {\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t} );\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\tthis.separableBlurMaterials[ i ].uniforms[ 'texSize' ].value = new Vector2( resx, resy );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\tthis.compositeMaterial.uniforms[ 'blurTexture1' ].value = this.renderTargetsVertical[ 0 ].texture;\n\tthis.compositeMaterial.uniforms[ 'blurTexture2' ].value = this.renderTargetsVertical[ 1 ].texture;\n\tthis.compositeMaterial.uniforms[ 'blurTexture3' ].value = this.renderTargetsVertical[ 2 ].texture;\n\tthis.compositeMaterial.uniforms[ 'blurTexture4' ].value = this.renderTargetsVertical[ 3 ].texture;\n\tthis.compositeMaterial.uniforms[ 'blurTexture5' ].value = this.renderTargetsVertical[ 4 ].texture;\n\tthis.compositeMaterial.uniforms[ 'bloomStrength' ].value = strength;\n\tthis.compositeMaterial.uniforms[ 'bloomRadius' ].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\tthis.compositeMaterial.uniforms[ 'bloomFactors' ].value = bloomFactors;\n\tthis.bloomTintColors = [ new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ),\n\t\t\t\t\t\t\t new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ) ];\n\tthis.compositeMaterial.uniforms[ 'bloomTintColors' ].value = this.bloomTintColors;\n\n\t// copy material\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.UnrealBloomPass relies on CopyShader' );\n\n\t}\n\n\tvar copyShader = CopyShader;\n\n\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\n\tthis.copyUniforms[ 'opacity' ].value = 1.0;\n\n\tthis.materialCopy = new ShaderMaterial( {\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis._oldClearColor = new Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new MeshBasicMaterial();\n\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\n\n};\n\nUnrealBloomPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar resx = Math.round( width / 2 );\n\t\tvar resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'texSize' ].value = new Vector2( resx, resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\trenderer.getClearColor( this._oldClearColor );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ 'luminosityThreshold' ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'colorTexture' ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'direction' ].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'colorTexture' ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'direction' ].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ 'bloomStrength' ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ 'bloomRadius' ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ 'bloomTintColors' ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[ 'tDiffuse' ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this._oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t'KERNEL_RADIUS': kernelRadius,\n\t\t\t\t'SIGMA': kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t'colorTexture': { value: null },\n\t\t\t\t'texSize': { value: new Vector2( 0.5, 0.5 ) },\n\t\t\t\t'direction': { value: new Vector2( 0.5, 0.5 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t'varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}',\n\n\t\t\tfragmentShader:\n\t\t\t\t'#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\n\t\t\t\t}'\n\t\t} );\n\n\t},\n\n\tgetCompositeMaterial: function ( nMips ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t'NUM_MIPS': nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t'blurTexture1': { value: null },\n\t\t\t\t'blurTexture2': { value: null },\n\t\t\t\t'blurTexture3': { value: null },\n\t\t\t\t'blurTexture4': { value: null },\n\t\t\t\t'blurTexture5': { value: null },\n\t\t\t\t'dirtTexture': { value: null },\n\t\t\t\t'bloomStrength': { value: 1.0 },\n\t\t\t\t'bloomFactors': { value: null },\n\t\t\t\t'bloomTintColors': { value: null },\n\t\t\t\t'bloomRadius': { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t'varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}',\n\n\t\t\tfragmentShader:\n\t\t\t\t'varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}'\n\t\t} );\n\n\t}\n\n} );\n\nUnrealBloomPass.BlurDirectionX = new Vector2( 1.0, 0.0 );\nUnrealBloomPass.BlurDirectionY = new Vector2( 0.0, 1.0 );\n\nexport { UnrealBloomPass };\n","/**\n * Full-screen textured quad shader\n */\n\nvar CopyShader = {\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'opacity': { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tvUv = uv;',\n\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t'}'\n\n\t].join( '\\n' ),\n\n\tfragmentShader: [\n\n\t\t'uniform float opacity;',\n\n\t\t'uniform sampler2D tDiffuse;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tvec4 texel = texture2D( tDiffuse, vUv );',\n\t\t'\tgl_FragColor = opacity * texel;',\n\n\t\t'}'\n\n\t].join( '\\n' )\n\n};\n\nexport { CopyShader };\n","import {\n\tColor\n} from '../../../build/three.module.js';\n\n/**\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nvar LuminosityHighPassShader = {\n\n\tshaderID: 'luminosityHighPass',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'luminosityThreshold': { value: 1.0 },\n\t\t'smoothWidth': { value: 1.0 },\n\t\t'defaultColor': { value: new Color( 0x000000 ) },\n\t\t'defaultOpacity': { value: 0.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tvUv = uv;',\n\n\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t'}'\n\n\t].join( '\\n' ),\n\n\tfragmentShader: [\n\n\t\t'uniform sampler2D tDiffuse;',\n\t\t'uniform vec3 defaultColor;',\n\t\t'uniform float defaultOpacity;',\n\t\t'uniform float luminosityThreshold;',\n\t\t'uniform float smoothWidth;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tvec4 texel = texture2D( tDiffuse, vUv );',\n\n\t\t'\tvec3 luma = vec3( 0.299, 0.587, 0.114 );',\n\n\t\t'\tfloat v = dot( texel.xyz, luma );',\n\n\t\t'\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );',\n\n\t\t'\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );',\n\n\t\t'\tgl_FragColor = mix( outputColor, texel, alpha );',\n\n\t\t'}'\n\n\t].join( '\\n' )\n\n};\n\nexport { LuminosityHighPassShader };\n","varying vec2 vUv;\r\nvarying vec3 vPosition;\r\nvarying vec3 vViewPosition;\r\nvarying vec2 vScreenSpace;\r\n#include <clipping_planes_pars_vertex>\r\nvoid main(){\r\n    #include <begin_vertex>    \r\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\r\n    vUv=uv;\r\n    vec4 vViewPosition4=modelViewMatrix*vec4(position,1.);\r\n    vViewPosition=vViewPosition4.xyz;\r\n    vPosition=position;\r\n    vScreenSpace=gl_Position.xy/gl_Position.w;\r\n    #include <project_vertex>\r\n    #include <clipping_planes_vertex>    \r\n}","uniform float uTime;\r\nuniform vec3 uColor;\r\nvarying vec3 vPosition;\r\n#include <clipping_planes_pars_fragment>\r\n#pragma glslify:snoise3=require(../packages/glsl-noise/simplex-3d)\r\nvoid main(){\r\n    #include <clipping_planes_fragment>\r\n    float gradient = 1.0 + (vPosition.z / -0.15);\r\n    float noise = snoise3(-vPosition.xzz * 15.0 + uTime/20.);\r\n     noise += snoise3(-vPosition.xzz * 10.0 + uTime/15.);\r\n    noise += snoise3(-vPosition.xzz * 5.0 + uTime/10.);\r\n    noise = smoothstep(-0.5, 0.7, noise + sin(uTime) * 0.1) - smoothstep(0.701, 4.0, noise + sin(uTime) * 0.1);\r\n    vec3 color = uColor;\r\n    color = mix(uColor + 0.3, uColor, noise);\r\n    color.g += 0.025;\r\n    gl_FragColor=vec4(color, noise - 0.6);\r\n}","varying vec2 vUv;\r\nvarying vec3 vPosition;\r\n#include <clipping_planes_pars_vertex>\r\nvoid main(){\r\n    #include <begin_vertex>\r\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\r\n    vUv=uv;\r\n    vPosition=position;\r\n    #include <project_vertex>\r\n    #include <clipping_planes_vertex>\r\n}","uniform float uTime;\r\nvarying vec3 vPosition;\r\nvarying vec2 vUv;\r\n#include <clipping_planes_pars_fragment>\r\n// procedural noise from IQ\r\nvec2 hash(vec2 p)\r\n{\r\n    p=vec2(dot(p,vec2(127.1,311.7)),\r\n    dot(p,vec2(269.5,183.3)));\r\n    return-1.+2.*fract(sin(p)*43758.5453123);\r\n}\r\n\r\nfloat noise(in vec2 p)\r\n{\r\n    const float K1=.366025404;// (sqrt(3)-1)/2;\r\n    const float K2=.211324865;// (3-sqrt(3))/6;\r\n    \r\n    vec2 i=floor(p+(p.x+p.y)*K1);\r\n    \r\n    vec2 a=p-i+(i.x+i.y)*K2;\r\n    vec2 o=(a.x>a.y)?vec2(1.,0.):vec2(0.,1.);\r\n    vec2 b=a-o+K2;\r\n    vec2 c=a-1.+2.*K2;\r\n    \r\n    vec3 h=max(.5-vec3(dot(a,a),dot(b,b),dot(c,c)),0.);\r\n    \r\n    vec3 n=h*h*h*h*vec3(dot(a,hash(i+0.)),dot(b,hash(i+o)),dot(c,hash(i+1.)));\r\n    \r\n    return dot(n,vec3(70.));\r\n}\r\nfloat fbm(vec2 uv)\r\n{\r\n    float f;\r\n    mat2 m=mat2(1.6,1.2,-1.2,1.6);\r\n    f=.5000*noise(uv);uv=m*uv;\r\n    f+=.2500*noise(uv);uv=m*uv;\r\n    f+=.1250*noise(uv);uv=m*uv;\r\n    f+=.0625*noise(uv);uv=m*uv;\r\n    f=.5+.5*f;\r\n    return f;\r\n}\r\nvoid main(){\r\n    #include <clipping_planes_fragment>\r\n    vec2 uv=vUv;\r\n    vec2 q=vUv;\r\n    float strength=floor(q.x+6.);\r\n    float T3=max(3.,1.25*strength)*uTime;\r\n    q.x+=-.5;\r\n    float n=fbm(strength*q-vec2(0,T3));\r\n    float c=1.-16.*pow(max(0.,length(q*vec2(1.8+q.y*1.5,.75))-n*max(0.,q.y+.25)),1.2);\r\n    float c1=n*c*(1.5-pow(0.50*uv.y,2.));\r\n    c1=clamp(c1,0.,1.);\r\n    vec3 col=vec3(1.5*c1,1.5*c1*c1*c1,c1*c1*c1*c1*c1*c1);\r\n    float a=c*(1.-pow(uv.y,3.));\r\n    vec3 color = mix(vec3(0.),col,a);\r\n    if(color.r < 0.7) discard;\r\n    gl_FragColor=vec4(color,1.);\r\n}","attribute float opacity;\r\nuniform float uTime;\r\nuniform float uSize;\r\nvarying vec3 vColor;\r\nvarying float vOpacity;\r\n#include <clipping_planes_pars_vertex>\r\n#pragma glslify:snoise3=require(../packages/glsl-noise/simplex-3d)\r\nvoid main()\r\n{\r\n    #include <begin_vertex>  \r\n    #include <project_vertex>\r\n    #include <clipping_planes_vertex>     \r\n    /** \r\n     * Position\r\n     */\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);  \r\n    modelPosition.x  += .02 *  snoise3(modelPosition.xyz * 40.0 + uTime * 0.01);\r\n    modelPosition.y  += .02 * snoise3(modelPosition.xyz * 10.0 + uTime * 0.01);\r\n    modelPosition.z  += .02 * snoise3(modelPosition.xyz * 80.0 + uTime * 0.01);\r\n\r\n    vec4 viewPosition = viewMatrix * modelPosition;\r\n    vec4 projectedPosition = projectionMatrix * viewPosition;\r\n    gl_Position = projectedPosition;\r\n    /**\r\n     * Size\r\n     */\r\n     gl_PointSize = uSize;\r\n     gl_PointSize *= (1.0 / - viewPosition.z);\r\n\r\n    /**\r\n     * Color\r\n     */\r\n    vColor = color;\r\n    /**\r\n    * Opacity\r\n    */\r\n    vOpacity = opacity;\r\n\r\n}","varying vec3 vColor;\r\nvarying float vOpacity;\r\nuniform float uTime;\r\n#include <clipping_planes_pars_fragment>\r\n#pragma glslify:snoise2=require(../packages/glsl-noise/simplex-2d)\r\nvoid main()\r\n{\r\n    #include <clipping_planes_fragment>\r\n    float dustIntensity = max(sin(vOpacity * uTime * 2.0), 0.1);\r\n    // Light point\r\n    float strength = distance(gl_PointCoord, vec2(0.5));\r\n    strength =( 1.0 - strength);\r\n    strength = pow(strength, 12.0);\r\n\r\n\r\n    // Final color\r\n    vec3 color = mix(vec3(0.0), vColor, strength);\r\n    gl_FragColor = vec4(color, dustIntensity);\r\n}","attribute float opacity;\r\nuniform float uSize;\r\nvarying float vOpacity;\r\nvoid main()\r\n{\r\n    #include <begin_vertex>\r\n    /** \r\n     * Position\r\n     */\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);  \r\n    vec4 viewPosition = viewMatrix * modelPosition;\r\n    vec4 projectedPosition = projectionMatrix * viewPosition;\r\n    gl_Position = projectedPosition;\r\n    /**\r\n     * Size\r\n     */\r\n     gl_PointSize = uSize;\r\n\r\n    /**\r\n    * Opacity\r\n    */\r\n    vOpacity = opacity;\r\n\r\n}","varying float vOpacity;\r\nvoid main()\r\n{\r\n    vec3 color = vec3(1.0);\r\n    gl_FragColor = vec4(color, vOpacity);\r\n}","varying vec2 vUv;\r\nvoid main(){\r\n    vUv=uv;\r\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\r\n}","uniform float uProgress;\r\nuniform sampler2D tDiffuse;\r\nuniform vec3 uColor;\r\nvarying vec2 vUv;\r\nvoid main(){\r\n    vec4 texel=texture2D(tDiffuse,vUv);\r\n    vec2 uv=vUv;\r\n    uv=uv-.5;\r\n    float circle=length(dot(uv,uv));\r\n    circle=smoothstep(uProgress,uProgress-.4,circle);\r\n    vec3 color=mix(uColor,texel.xyz,circle);\r\n    gl_FragColor=vec4(color,circle);\r\n}","import * as THREE from 'three'\r\n/**\r\n * @typedef {import} snoise3\r\n * @param {snoise3} 3D noise function\r\n */\r\nimport snoise3 from '../packages/glsl-noise/simplex-3d.glsl'\r\n\r\n/**\r\n * OnBeforeCompile Three js function\r\n * @param {object} mesh - Mesh with material\r\n * @return {void}\r\n */\r\n\r\nconst SeaMaterialOnBeforeCompile = (mesh) => {\r\n  /**\r\n   * @type {object}\r\n   */\r\n  const { material } = mesh\r\n  material.onBeforeCompile = (shader) => {\r\n    /**\r\n     * Uniforms\r\n     * @property {float} uTime - Timer\r\n     * @property {sampler2D} uDepth - Grayscale picture for Depth\r\n     * @property {vec3} uColor - Scene Color Background\r\n     */\r\n    shader.uniforms.uTime = { value: 0 }\r\n    shader.uniforms.uDepth = { value: null }\r\n    shader.uniforms.uColor = { value: new THREE.Vector3() }\r\n\r\n    /**\r\n     * @typedef {string} shaders\r\n     * @property {string} vertex shader\r\n     * @property {string} fragment shader\r\n     */\r\n    shader.vertexShader = `\r\n    varying vec3 vPosition; \r\n    uniform float uTime;\r\n    ${snoise3}\r\n    ${shader.vertexShader}`\r\n    shader.vertexShader = shader.vertexShader.replace(\r\n      /#include <beginnormal_vertex>/,\r\n      (match) =>\r\n        `\r\n        vec3 normalTransform = normal;\r\n        normalTransform.xz +=  0.025 * sin( normalTransform.xz * 100.0 + uTime);\r\n        vec3 objectNormal = vec3( normalTransform );\r\n        #ifdef USE_TANGENT\r\n          vec3 objectTangent = vec3( tangent.xyz );\r\n        #endif\r\n      `\r\n    )\r\n    shader.vertexShader = shader.vertexShader.replace(\r\n      /#include <begin_vertex>/,\r\n      (match) => \r\n        match +\r\n        `\r\n      float noise = snoise((transformed.xxz) * 150.0 + uTime/10.0); \r\n      noise += snoise((transformed.xzz) * 300.0 + uTime/10.0); \r\n      transformed.yz += noise * normalTransform.xz * 0.1 * 0.35;\r\n      vPosition = transformed;\r\n      `\r\n    )\r\n\r\n    shader.fragmentShader = `\r\n    uniform float uTime;\r\n    uniform vec3 uColor;\r\n    uniform sampler2D uDepth;\r\n    varying vec3 vPosition;\r\n    ${snoise3} \r\n    ${shader.fragmentShader}`\r\n    shader.fragmentShader = shader.fragmentShader.replace(\r\n      /#include <dithering_fragment>/,\r\n      (match) =>\r\n        match +\r\n        `\r\n        float depth = texture2D(uDepth, fract(vUv)).g;\r\n        float noise = snoise(vPosition * 20.0 + uTime/5.0); \r\n        vec3 old_gl_FragColor = vec4(outgoingLight, diffuseColor.a).rgb;\r\n        vec3 color = mix(uColor,old_gl_FragColor,depth);\r\n        gl_FragColor = vec4(color, 1.0);\r\n        `\r\n    )\r\n\r\n    mesh.material.userData.materialShader = shader\r\n  }\r\n}\r\n\r\nexport default SeaMaterialOnBeforeCompile\r\n","//\r\n// Description : Array and textureless GLSL 2D/3D/4D simplex\r\n//               noise functions.\r\n//      Author : Ian McEwan, Ashima Arts.\r\n//  Maintainer : ijm\r\n//     Lastmod : 20110822 (ijm)\r\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\r\n//               Distributed under the MIT License. See LICENSE file.\r\n//               https://github.com/ashima/webgl-noise\r\n//\r\n\r\nvec3 mod289(vec3 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 mod289(vec4 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x) {\r\n     return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r)\r\n{\r\n  return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nfloat snoise(vec3 v)\r\n  {\r\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\r\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\r\n\r\n// First corner\r\n  vec3 i  = floor(v + dot(v, C.yyy) );\r\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\r\n\r\n// Other corners\r\n  vec3 g = step(x0.yzx, x0.xyz);\r\n  vec3 l = 1.0 - g;\r\n  vec3 i1 = min( g.xyz, l.zxy );\r\n  vec3 i2 = max( g.xyz, l.zxy );\r\n\r\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\r\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\r\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\r\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\r\n  vec3 x1 = x0 - i1 + C.xxx;\r\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\r\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\r\n\r\n// Permutations\r\n  i = mod289(i);\r\n  vec4 p = permute( permute( permute(\r\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\r\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\r\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\r\n\r\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\r\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\r\n  float n_ = 0.142857142857; // 1.0/7.0\r\n  vec3  ns = n_ * D.wyz - D.xzx;\r\n\r\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\r\n\r\n  vec4 x_ = floor(j * ns.z);\r\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\r\n\r\n  vec4 x = x_ *ns.x + ns.yyyy;\r\n  vec4 y = y_ *ns.x + ns.yyyy;\r\n  vec4 h = 1.0 - abs(x) - abs(y);\r\n\r\n  vec4 b0 = vec4( x.xy, y.xy );\r\n  vec4 b1 = vec4( x.zw, y.zw );\r\n\r\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\r\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\r\n  vec4 s0 = floor(b0)*2.0 + 1.0;\r\n  vec4 s1 = floor(b1)*2.0 + 1.0;\r\n  vec4 sh = -step(h, vec4(0.0));\r\n\r\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\r\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\r\n\r\n  vec3 p0 = vec3(a0.xy,h.x);\r\n  vec3 p1 = vec3(a0.zw,h.y);\r\n  vec3 p2 = vec3(a1.xy,h.z);\r\n  vec3 p3 = vec3(a1.zw,h.w);\r\n\r\n//Normalise gradients\r\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n  p0 *= norm.x;\r\n  p1 *= norm.y;\r\n  p2 *= norm.z;\r\n  p3 *= norm.w;\r\n\r\n// Mix final noise value\r\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\r\n  m = m * m;\r\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\r\n                                dot(p2,x2), dot(p3,x3) ) );\r\n  }\r\n\r\n#pragma glslify: export(snoise)","import * as THREE from 'three'\r\n\r\n/**\r\n * OnBeforeCompile Three js function\r\n * @param {object} mesh - Mesh with material\r\n * @return {void}\r\n */\r\n\r\nconst StarsMaterialOnBeforeCompile = (mesh) => {\r\n  /**\r\n   * @type {object}\r\n   */\r\n  const { material } = mesh\r\n  material.onBeforeCompile = (shader) => {\r\n    /**\r\n     * Uniforms\r\n     * @property {vec3} uHaloColor - Scene Color Background\r\n     */\r\n    shader.uniforms.uHaloColor = { value: new THREE.Vector3() }\r\n\r\n    /**\r\n     * @typedef {string} shaders\r\n     * @property {string} vertex shader\r\n     * @property {string} fragment shader\r\n     */\r\n    shader.vertexShader = `\r\n        attribute float opacity;\r\n        varying float vOpacity;\r\n\t\t${shader.vertexShader}`\r\n\r\n    shader.vertexShader = shader.vertexShader.replace(\r\n      /#include <begin_vertex>/,\r\n      (match) =>\r\n        match +\r\n        `\r\n        vOpacity = opacity;\r\n\t\t\t`\r\n    )\r\n    shader.fragmentShader = `\r\n    varying float vOpacity;\r\n\t\t${shader.fragmentShader}`\r\n    shader.fragmentShader = shader.fragmentShader.replace(\r\n      /#include <dithering_fragment>/,\r\n      (match) =>\r\n        match +\r\n        `\r\n        gl_FragColor = vec4(color, 1.0);\r\n\t\t\t\t    `\r\n    )\r\n\r\n    mesh.material.userData.materialShader = shader\r\n  }\r\n}\r\nexport default StarsMaterialOnBeforeCompile\r\n","import * as THREE from 'three'\r\n\r\n /**\r\n  * OnBeforeCompile Three js function\r\n  * @param {object} mesh - Mesh with material\r\n  * @return {void}\r\n  */\r\n \r\n const ShoresMaterialOnBeforeCompile = (mesh) => {\r\n   /**\r\n    * @type {object}\r\n    */\r\n   const { material } = mesh\r\n   material.onBeforeCompile = (shader) => {\r\n     /**\r\n      * Uniforms\r\n      * @property {sampler2D} uDepth - Grayscale picture for Depth\r\n      * @property {vec3} uColor - Scene Color Background\r\n      */\r\n     shader.uniforms.uDepth = { value: null } \r\n     shader.uniforms.uColor = { value: new THREE.Vector3() } \r\n \r\n     /**\r\n      * @typedef {string} shaders\r\n      * @property {string} fragment shader\r\n      */\r\n\r\n     shader.fragmentShader = `\r\n     uniform vec3 uColor;\r\n     uniform sampler2D uDepth;\r\n     ${shader.fragmentShader}`\r\n \r\n     shader.fragmentShader = shader.fragmentShader.replace(\r\n       /#include <dithering_fragment>/,\r\n       (match) =>\r\n         match +\r\n         `\r\n         float depth = texture2D(uDepth, fract(vUv)).g;\r\n         vec3 old_gl_FragColor = vec4(outgoingLight, diffuseColor.a).rgb;\r\n         vec3 color = mix(uColor,old_gl_FragColor,depth);\r\n         gl_FragColor = vec4(color, 1.0);\r\n         `\r\n     )\r\n \r\n     mesh.material.userData.materialShader = shader\r\n   }\r\n }\r\n \r\n export default ShoresMaterialOnBeforeCompile\r\n ","import * as THREE from 'three'\r\n\r\n /**\r\n  * OnBeforeCompile Three js function\r\n  * @param {object} mesh - Mesh with material\r\n  * @return {void}\r\n  */\r\n \r\n const TreesMaterialOnBeforeCompile = (mesh) => {\r\n   /**\r\n    * @type {object}\r\n    */\r\n   const { material } = mesh\r\n   material.onBeforeCompile = (shader) => {\r\n     /**\r\n      * Uniforms\r\n      * @property {sampler2D} uDepth - Grayscale picture for Depth\r\n      * @property {vec3} uColor - Scene Color Background\r\n      */\r\n     shader.uniforms.uDepth = { value: null } \r\n     shader.uniforms.uColor = { value: new THREE.Vector3() } \r\n \r\n     /**\r\n      * @typedef {string} shaders\r\n      * @property {string} fragment shader\r\n      */\r\n\r\n     shader.fragmentShader = `\r\n     uniform vec3 uColor;\r\n     uniform sampler2D uDepth;\r\n     ${shader.fragmentShader}`\r\n \r\n     shader.fragmentShader = shader.fragmentShader.replace(\r\n       /#include <dithering_fragment>/,\r\n       (match) =>\r\n         match +   \r\n         `\r\n         float depth = texture2D(uDepth, fract(vUv)).g;\r\n         vec3 old_gl_FragColor = vec4(outgoingLight, diffuseColor.a).rgb;\r\n         vec3 color = mix(uColor, old_gl_FragColor, depth);\r\n         gl_FragColor = vec4(color, 1.0);\r\n         ` \r\n     )\r\n \r\n     mesh.material.userData.materialShader = shader\r\n   }\r\n }\r\n \r\n export default TreesMaterialOnBeforeCompile\r\n ","import * as THREE from 'three'\r\n\r\n /**\r\n  * OnBeforeCompile Three js function\r\n  * @param {object} mesh - Mesh with material\r\n  * @return {void}\r\n  */\r\n \r\n const MountainsMaterialOnBeforeCompile = (mesh) => {\r\n   /**\r\n    * @type {object}\r\n    */\r\n   const { material } = mesh\r\n   material.onBeforeCompile = (shader) => {\r\n     /**\r\n      * Uniforms\r\n      * @property {sampler2D} uDepth - Grayscale picture for Depth\r\n      * @property {vec3} uColor - Scene Color Background\r\n      */\r\n     shader.uniforms.uDepth = { value: null } \r\n     shader.uniforms.uColor = { value: new THREE.Vector3() } \r\n \r\n     /**\r\n      * @typedef {string} shaders\r\n      * @property {string} fragment shader\r\n      */\r\n\r\n     shader.fragmentShader = `\r\n     uniform vec3 uColor;\r\n     uniform sampler2D uDepth;\r\n     ${shader.fragmentShader}`\r\n \r\n     shader.fragmentShader = shader.fragmentShader.replace(\r\n       /#include <dithering_fragment>/,\r\n       (match) =>\r\n         match + \r\n         `\r\n         float depth = texture2D(uDepth, fract(vUv)).g;\r\n         vec3 old_gl_FragColor = vec4(outgoingLight, diffuseColor.a).rgb;\r\n         vec3 color = mix(uColor,old_gl_FragColor,depth);\r\n         gl_FragColor = vec4(color, 1.0);\r\n         `\r\n     )\r\n \r\n     mesh.material.userData.materialShader = shader\r\n   }\r\n }\r\n \r\n export default MountainsMaterialOnBeforeCompile\r\n ","import * as THREE from 'three'\r\n\r\n /**\r\n  * OnBeforeCompile Three js function\r\n  * @param {object} mesh - Mesh with material\r\n  * @return {void}\r\n  */\r\n \r\n const VegetationMaterialOnBeforeCompile = (mesh) => {\r\n   /**\r\n    * @type {object}\r\n    */\r\n   const { material } = mesh\r\n   material.onBeforeCompile = (shader) => {\r\n     /**\r\n      * Uniforms\r\n      * @property {sampler2D} uDepth - Grayscale picture for Depth\r\n      * @property {vec3} uColor - Scene Color Background\r\n      */\r\n      shader.uniforms.uDepth = { value: null } \r\n      shader.uniforms.uColor = { value: new THREE.Vector3() } \r\n \r\n     /**\r\n      * @typedef {string} shaders\r\n      * @property {string} fragment shader\r\n      */\r\n      shader.vertexShader = `\r\n      varying vec3 vPosition; \r\n     ${shader.vertexShader}`\r\n\r\n     shader.vertexShader = shader.vertexShader.replace(\r\n         /#include <begin_vertex>/,\r\n         (match) =>\r\n             match +\r\n             `\r\n         vPosition = position;\r\n         `\r\n     )\r\n     shader.fragmentShader = `\r\n     uniform vec3 uColor;\r\n     uniform sampler2D uDepth;\r\n     varying vec3 vPosition; \r\n     ${shader.fragmentShader}`\r\n \r\n     shader.fragmentShader = shader.fragmentShader.replace(\r\n       /#include <dithering_fragment>/,\r\n       (match) =>\r\n         match + \r\n         `\r\n         float depth = texture2D(uDepth, fract(vUv)).g;\r\n         vec3 old_gl_FragColor = vec4(outgoingLight, diffuseColor.a).rgb;\r\n         vec3 color =  mix(uColor, old_gl_FragColor, depth);  \r\n         color.b += 0.005; \r\n         gl_FragColor = vec4(vec3(color), 1.0);    \r\n         `\r\n     )\r\n \r\n     mesh.material.userData.materialShader = shader \r\n   }\r\n }\r\n \r\n export default VegetationMaterialOnBeforeCompile\r\n ","import * as THREE from 'three'\r\n\r\n /**\r\n  * OnBeforeCompile Three js function\r\n  * @param {object} mesh - Mesh with material\r\n  * @return {void}\r\n  */\r\n \r\n const RocksMaterialOnBeforeCompile = (mesh) => {\r\n   /**\r\n    * @type {object}\r\n    */\r\n   const { material } = mesh\r\n   material.onBeforeCompile = (shader) => {\r\n     /**\r\n      * Uniforms\r\n      * @property {sampler2D} uDepth - Grayscale picture for Depth\r\n      * @property {vec3} uColor - Scene Color Background\r\n      */\r\n     shader.uniforms.uDepth = { value: null } \r\n     shader.uniforms.uColor = { value: new THREE.Vector3() } \r\n \r\n     /**\r\n      * @typedef {string} shaders\r\n      * @property {string} fragment shader\r\n      */\r\n\r\n     shader.fragmentShader = `\r\n     uniform vec3 uColor;\r\n     uniform sampler2D uDepth;\r\n     ${shader.fragmentShader}`\r\n \r\n     shader.fragmentShader = shader.fragmentShader.replace(\r\n       /#include <dithering_fragment>/,\r\n       (match) =>\r\n         match + \r\n         `\r\n         float depth = texture2D(uDepth, fract(vUv)).g;\r\n         vec3 old_gl_FragColor = vec4(outgoingLight, diffuseColor.a).rgb;\r\n         vec3 color = mix(uColor,old_gl_FragColor,depth);\r\n         gl_FragColor = vec4(color, 1.0); \r\n         `\r\n     )\r\n \r\n     mesh.material.userData.materialShader = shader\r\n   }\r\n } \r\n \r\n export default RocksMaterialOnBeforeCompile\r\n ","import * as THREE from 'three'\r\n\r\n/**\r\n * OnBeforeCompile Three js function\r\n * @param {object} mesh - Mesh with material\r\n * @return {void}\r\n */\r\n\r\nconst PalmtreesMaterialOnBeforeCompile = (mesh) => {\r\n\t/**\r\n\t * @type {object}\r\n\t */\r\n\tconst { material } = mesh\r\n\tmaterial.onBeforeCompile = (shader) => {\r\n\t\t/**\r\n\t\t * Uniforms\r\n\t\t * @property {sampler2D} uDepth - Grayscale picture for Depth\r\n\t\t * @property {vec3} uColor - Scene Color Background\r\n\t\t */\r\n\t\tshader.uniforms.uTime = { value: null }\r\n\t\tshader.uniforms.uDepth = { value: null }\r\n\t\tshader.uniforms.uDepth2 = { value: null }\r\n\t\tshader.uniforms.uColor = { value: new THREE.Vector3() }\r\n\r\n\t\t/**\r\n\t\t * @typedef {string} shaders\r\n\t\t * @property {string} fragment shader\r\n\t\t */\r\n\r\n\t\tshader.vertexShader = `\r\n      uniform float uTime;\r\n      uniform sampler2D uDepth2;\r\n      ${shader.vertexShader}`\r\n\t\tshader.vertexShader = shader.vertexShader.replace(\r\n\t\t\t/#include <project_vertex>/,\r\n\t\t\t`\r\n        float depth = texture2D(uDepth2, fract(vUv)).g;  \r\n        if(depth > .7) {\r\n          transformed.x += sin(depth * ( transformed.x * transformed.x)  + uTime) * 0.0006;\r\n          transformed.y += sin(depth * ( transformed.y * transformed.y) + uTime) * 0.00039;\r\n          transformed.z += sin(depth * transformed.z + uTime) * 0.00039;\r\n        }\r\n        vec4 mvPosition = vec4( transformed, 1.0 );\r\n        #ifdef USE_INSTANCING\r\n        mvPosition = instanceMatrix * mvPosition;\r\n        #endif\r\n        mvPosition = modelViewMatrix * mvPosition;\r\n        gl_Position = projectionMatrix * mvPosition;\r\n        `\r\n\t\t)\r\n\r\n\t\tshader.fragmentShader = `\r\n     uniform vec3 uColor;\r\n     uniform sampler2D uDepth;\r\n     ${shader.fragmentShader}`\r\n\r\n\t\tshader.fragmentShader = shader.fragmentShader.replace(\r\n\t\t\t/#include <dithering_fragment>/,\r\n\t\t\t(match) =>\r\n\t\t\t\tmatch +\r\n\t\t\t\t`\r\n         float depth = texture2D(uDepth, fract(vUv)).g;\r\n         vec3 old_gl_FragColor = vec4(outgoingLight, diffuseColor.a).rgb;\r\n         vec3 color = mix(uColor,old_gl_FragColor,depth);\r\n         gl_FragColor = vec4(color, 1.0); \r\n         `\r\n\t\t)\r\n\r\n\t\tmesh.material.userData.materialShader = shader\r\n\t}\r\n}\r\n\r\nexport default PalmtreesMaterialOnBeforeCompile\r\n","import * as THREE from 'three'\r\n\r\n/**\r\n * OnBeforeCompile Three js function\r\n * @param {object} mesh - Mesh with material\r\n * @return {void}\r\n */\r\n\r\nconst MoonMaterialOnBeforeCompile = (mesh) => {\r\n\t/**\r\n\t * @type {object}\r\n\t */\r\n\tconst { material } = mesh\r\n\tmaterial.onBeforeCompile = (shader) => {\r\n\t\t/**\r\n\t\t * Uniforms\r\n\t\t * @property {vec3} uHaloColor - Scene Color Background\r\n\t\t */\r\n\t\tshader.uniforms.uHaloColor = { value: new THREE.Vector3() }\r\n\r\n\t\t/**\r\n\t\t * @typedef {string} shaders\r\n\t\t * @property {string} vertex shader\r\n\t\t * @property {string} fragment shader\r\n\t\t */\r\n\t\tshader.vertexShader = `\r\n\t\t varying vec3 vPosition; \r\n\t\t${shader.vertexShader}`\r\n\r\n\t\tshader.vertexShader = shader.vertexShader.replace(\r\n\t\t\t/#include <begin_vertex>/,\r\n\t\t\t(match) =>\r\n\t\t\t\tmatch +\r\n\t\t\t\t`\r\n\t\t\tvPosition = position;\r\n\t\t\t`\r\n\t\t)\r\n\t\tshader.fragmentShader = `\r\n\t\tuniform vec3 uHaloColor;\r\n\t\tvarying vec3 vPosition; \r\n\t\t${shader.fragmentShader}`\r\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\r\n\t\t\t\t/#include <dithering_fragment>/,\r\n\t\t\t\t(match) =>\r\n\t\t\t\t\tmatch +\r\n\t\t\t\t\t`\r\n\t\t\t\tfloat moonIntensity = 0.6;\r\n\t\t\t\tvec3 moonUv = vPosition/0.1;\r\n\t\t\t\tvec2 moonUvHalo =  (vPosition.xy/0.1);\r\n\t\t\t\tfloat moonHalo = .7 - distance(moonUvHalo, vec2(0.05, -0.1));\r\n\t\t\t\tfloat moonMaskBottom = max(.5 + moonUv.y + (-moonUv.x * 0.3), 0.0);  \r\n\t\t\t\tfloat moonMask = moonHalo * moonMaskBottom / (1.0-moonIntensity);\r\n\t\t\t\tvec3 diffuse = diffuseColor.rgb;\r\n\t\t\t\tdiffuse.g += 0.1;\r\n\t\t\t\tdiffuse.b += 0.15;\r\n\t\t\t\tvec3 color = mix(uHaloColor, diffuse, moonMask);\r\n\t\t\t\tgl_FragColor = vec4(color, 1.0);\r\n\t\t\t\t`\r\n\t\t\t)\r\n\r\n\t\tmesh.material.userData.materialShader = shader\r\n\t}\r\n}\r\nexport default MoonMaterialOnBeforeCompile"],"names":[],"version":3,"file":"Effects.8a30fb5d.js.map","sourceRoot":"/__parcel_source_root/"}